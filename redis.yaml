# Source: superset/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-redis
  namespace: superset
  labels:
    app: redis-superset
data:
  redis.conf: |-
    # User-supplied configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    # appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    #save " "
  master.conf: |-
    dir /data
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
  replica.conf: |-
    dir /data
    slave-read-only yes
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""

---

# Source: superset/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-redis-health
  namespace: superset
  labels:
    app: redis-superset
data:
  ping_readiness_local.sh: |-
    response=$(
    timeout -s 9 $1 \
    redis-cli \
    -a $REDIS_PASSWORD --no-auth-warning \
    -h localhost \
    -p $REDIS_PORT \
    ping
    )
    if [ "$response" != "PONG" ]; then
    echo "$response"
    exit 1
    fi
  ping_liveness_local.sh: |-
    response=$(
    timeout -s 9 $1 \
    redis-cli \
    -a $REDIS_PASSWORD --no-auth-warning \
    -h localhost \
    -p $REDIS_PORT \
    ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
    echo "$response"
    exit 1
    fi
  ping_readiness_master.sh: |-
    response=$(
    timeout -s 9 $1 \
    redis-cli \
    -a $REDIS_MASTER_PASSWORD --no-auth-warning \
    -h $REDIS_MASTER_HOST \
    -p $REDIS_MASTER_PORT_NUMBER \
    ping
    )
    if [ "$response" != "PONG" ]; then
    echo "$response"
    exit 1
    fi
  ping_liveness_master.sh: |-
    response=$(
    timeout -s 9 $1 \
    redis-cli \
    -a $REDIS_MASTER_PASSWORD --no-auth-warning \
    -h $REDIS_MASTER_HOST \
    -p $REDIS_MASTER_PORT_NUMBER \
      ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
    echo "$response"
    exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status

  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---

# Source: superset/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: superset-redis-headless
  namespace: superset
  labels:
    app: redis-superset
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis-superset
---

# Source: superset/charts/redis/templates/redis-master-svc.yaml

apiVersion: v1
kind: Service
metadata:
  name: redis-master-superset
  namespace: superset
  labels:
    app: redis-superset
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis-superset
    role: master



---

# Source: superset/charts/redis/templates/redis-master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: superset-redis-master
  namespace: superset
  labels:
    app: redis-superset
spec:
  selector:
    matchLabels:
      app: redis-superset
      role: master
  serviceName: superset-redis-headless
  template:
    metadata:
      labels:
        app: redis-superset
        role: master
      annotations:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 
                operator: 
                values:
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
      - name: superset-redis
        image: "docker.io/bitnami/redis:5.0.7-debian-10-r32"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
        command:
        - /bin/bash
        - -c
        - |
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
          password_aux=`cat ${REDIS_PASSWORD_FILE}`
          export REDIS_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--requirepass" "${REDIS_PASSWORD}")
          ARGS+=("--masterauth" "${REDIS_PASSWORD}")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
            /run.sh ${ARGS[@]}
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: superset-redis
              key: redis-password
        - name: REDIS_PORT
          value: "6379"
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness_local.sh 5
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness_local.sh 5
        volumeMounts:
        - name: health
          mountPath: /health
        - name: redis-data
          mountPath: /data
          subPath: 
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc/
        resources:
          requests:
            cpu: 250m
            memory: 500Mi
          limits:
            cpu: 1
            memory: 1Gi
      volumes:
      - name: health
        configMap:
          name: superset-redis-health
          defaultMode: 0755
      - name: config
        configMap:
          name: superset-redis
      - name: redis-tmp-conf
        emptyDir: {}
      - name: redis-data
        emptyDir: {}
  
